package jem;
import java.util.Scanner;

public class Jem {
    
   /* this is how to print colored text 
    Declaring ANSI_RESET so that we can reset the color  */
    public static final String ANSI_RESET = "\u001B[0m";
    public static final String ANSI_RED = "\u001B[31m";
    
    static int Accnum,Accpin,choice, 
            jemAccNum = 12345 , 
            jemPin = 143,
            angeloAccNum = 135, 
            angeloPin=123,
            total1,total2,withdraw,deposit;
    static double         
           jemzxcBalance = 50000,
           angeloBalance = 20000; 
    static Scanner scanner = new Scanner(System.in);
    
public static void main (String[] args) {
          login();
    } // end of main 

/* LOGIN METHOD*/
static void login(){ 
    
                    System.out.println("----------- WELCOME TO THE UNDERGROUND BANK -----------\n");
  /* This whole do while is for input validation for accnum and accpin */  
do {  
    for (int i =0; i<1; i++){
                    System.out.print("Enter Account Number : ");
        if (scanner.hasNextInt()){ /* for validation */
                    Accnum = scanner.nextInt();
        }else {
                    System.out.println(ANSI_RED+"Invalid input ! "+ANSI_RESET);
                    scanner.next();
                    i--;
        }
      } // end of input validation for account number
    
    for(int i =0; i<1; i++){ /* validation for pin */
                    System.out.print("Enter Pin : ");
        if (scanner.hasNextInt()){
                    Accpin = scanner.nextInt();
        }else{
                    System.out.println(ANSI_RED+"Invalid input ! "+ANSI_RESET);
                    scanner.next();
                    i--;
        }
      } // end of input validation for account pin
        
     if(Accnum == jemAccNum && Accpin == jemPin){
         System.out.println("\n>>>>> Welcome Jemzxc ! <<<<<");
         choice();  
     }
   else if(Accnum == angeloAccNum && Accpin == angeloPin){
         System.out.println("\n>>>>> Welcome Angelo ! <<<<<");
         choice();  
     }
     else {
         System.err.println("Can't Find Account ! ");
     }
}while(true); 

}
/* METHOD FOR CHOICES */
static void choice(){
         System.out.println("\n------------------------------");   
         System.out.println("1. View Current Balance");
         System.out.println("2. Withdraw");
         System.out.println("3. Deposit");
         System.out.println("4. Statement");
         System.out.println("5. Exit Application");
         System.out.println("------------------------------\n");
         bank();
}
 static void bank(){
            
  for(int i =0; i<1; i++){ // first iya ni basahon 
                    System.out.print("Enter your choice : ");
   if(scanner.hasNextInt()){ // if ang scanner naay int mu run ni 
                    choice = scanner.nextInt();
                    
       if(choice <0) { // if choice kay negative, mu run ni
                    System.out.println(ANSI_RED+"number can't be negative! "+ANSI_RESET);
                    i--; // para sa infinite for loop
         }
    }     
            else { // if mu input ug (letter) nga wala sa lima ka choices mu run ni
                    System.out.println(ANSI_RED+"Not in the choices ! "+ANSI_RESET);
                    i--;
                    scanner.next();
        }
     } // end of input validation for loop
              
switch(choice){ 
  /* BALANCE */
    case 1: 
           if( Accnum == jemAccNum && Accpin == jemPin){
                    System.out.println("\nAvailable balance : "+ANSI_RED+"P"+jemzxcBalance+""+ANSI_RESET);
                    choice();
          } 
           else if ( Accnum == angeloAccNum && Accpin == angeloPin){
                    System.out.println("\nAvailable balance : "+ANSI_RED+"P"+angeloBalance+""+ANSI_RESET);
                    choice();
          }
         // end of case 1: balance
                  
  /* WITHDRAW */    
    case 2: 
          
        if(jemzxcBalance == 0){ // if jemzxcbalance is zero this will run
                    System.out.println(ANSI_RED+"\nOut of balance !! "+ANSI_RESET);
                    System.out.println("BALANCE = P"+jemzxcBalance);
                    choice();
            } 
        else if (angeloBalance == 0){ // if angelobalance is zero this will run
                    System.err.println("\nOut of balance !! ");
                    System.out.println("BALANCE = "+angeloBalance);
                    choice();
            } 
        
      /* if you withdraw a total of 15000, you cannot withdraw again */
        else if(total1 >= 15000 ) {
            System.out.println(ANSI_RED+"\nYou can only withdraw limit of P15000 a day !"+ANSI_RESET);
            choice();
        }
   
    for(int i= 0; i<1; i++){
      for(int j =0; j<1; j++){ 
        if     (Accnum == jemAccNum && Accpin == jemPin){
                inputValidationWithdraw();
                System.out.println("\nSuccessfully withdrew " +ANSI_RED+ "P" +withdraw+ANSI_RESET+ " from your account ! ");
                System.out.println("Available Balance is : "+ANSI_RED+"P"+(jemzxcBalance-withdraw)+""+ANSI_RESET);
                jemzxcBalance = jemzxcBalance-withdraw; 
                total1 = total1+withdraw;
                choice();
        }
        
   else if     (Accnum == angeloAccNum && Accpin == angeloPin){
                inputValidationWithdraw();
                System.out.println("\nSuccessfully withdrew " +ANSI_RED+ "P" +withdraw+ANSI_RESET+ " from your account ! ");
                System.out.println("Available Balance is : "+ANSI_RED+"P"+(angeloBalance-withdraw)+""+ANSI_RESET);
                angeloBalance = angeloBalance-withdraw;
                total1 = total1+withdraw;
                choice();
        }
            } // end of j
       } // end of i

    /* DEPOSIT */
    case 3: 
        
        /* for jemzxc */
        if     (Accnum == jemAccNum && Accpin == jemPin){
                inputValidationDeposit();
                System.out.println("\nSuccessfully depositted " +ANSI_RED+"P"+deposit+ANSI_RESET+ " to your account ! ");
                System.out.println("Available Balance is : "+ANSI_RED+"P"+(jemzxcBalance+deposit)+""+ANSI_RESET);
                jemzxcBalance = jemzxcBalance+deposit;  
                total2 = total2+deposit;
                choice();
                }
        
        /* for angelo */
   else if     (Accnum == angeloAccNum && Accpin == angeloPin){
                inputValidationDeposit();
                System.out.println("\nSuccessfully depositted " +ANSI_RED+"P"+deposit+ANSI_RESET+ " to your account ! ");
                System.out.println("Available Balance is : "+ANSI_RED+"P"+(angeloBalance+deposit)+""+ANSI_RESET);
                angeloBalance = angeloBalance+deposit;
                total2 = total2+deposit;
                choice();
         }
        // end of case 3: deposit
        
    case 4: // statement
                System.out.println("\nTotal withdrawn : "+ANSI_RED+"P"+total1+""+ANSI_RESET);
                System.out.println("Total deposits : "+ANSI_RED+"P"+total2+""+ANSI_RESET);
                choice();
         
    case 5: // exit 
      if (Accnum == jemAccNum){
                System.out.println("\n      >>>>>> Thank you Jemzxc <<<<<<");
                System.out.println("             Collect your card \n");
                total1 =0;
                login();
      }
      else if (Accnum == angeloAccNum){
                System.out.println("\n      >>>>>> Thank you Angelo <<<<<<");
                System.out.println("             Collect your card \n");
                total1 =0;
                login();
        
      }  
    default: 
        /* ug mu enter ug number nga wala sa five choices */
                System.out.println(ANSI_RED+"Not in the choices ! "+ANSI_RESET);
                bank();

      } // end sa switch  
    } // end of method bank

static void inputValidationWithdraw(){
      
    for(int i= 0; i<1; i++){ 
         /* ako gi butangan ug inner for loop kay naay bug if wala ni  
            like ang bug nga mu print ang numbers can't be negative 
            bisag ako gi input is a character or string  
            */
        for(int j =0; j<1; j++){ 
             
                System.out.println("\nHow much you want to withdraw?");
                System.out.print("Enter the amount or type ( 0 ) to cancel : P");
   
                
        /* validation for invalid input */
            if(scanner.hasNextInt()){ 
                    withdraw = scanner.nextInt();
               }
             
            else {
                System.out.println(ANSI_RED+"\nInvalid input !!"+ANSI_RESET); 
                scanner.next();
                    j--;
               }
            if (withdraw >= 15000){
                 System.out.println(ANSI_RED+"\nYou can only withdraw limit of P15000 a day !"+ANSI_RESET);
                 j--;
             }
            
              } // end of for loop j
            
              /*validation for insuficient balance */
            if (withdraw > jemzxcBalance && withdraw > angeloBalance){ 
                System.out.println(ANSI_RED+"\nInsuficient Balance !!"+ANSI_RESET);                 
                i--;                   
                } 
               
               /* validation for negative nums */
            else if (withdraw < 0){ 
                System.out.println(ANSI_RED+"\nnumbers can't be negative !!"+ANSI_RESET);
                i--;
                } 
                
                /* validation for multiple of 500 */
            else if( withdraw<500 && withdraw>1 ) { 
                System.out.println(ANSI_RED+"\nCan't withdraw below P500 !!"+ANSI_RESET);
                i--;
                }  
                /* if withdraw is lessthan or equals to zero */
            else if(withdraw == 0){
                choice();
                }

   } // end of for loop i  
  } // end of method inputValidationWithdraw  
  


/* DEPOSIT */
  static void inputValidationDeposit(){
      
       for(int i= 0; i<1; i++){ 
         /* ako gi butangan ug inner for loop kay naay bug if wala ni  
            like ang bug nga mu print ang numbers can't be negative 
            bisag ako gi input is a character or string  
            */
        for(int j =0; j<1; j++){ 
                
                System.out.println("\nHow much you want to deposit ? ");
                System.out.print("Enter the amount or type ( 0 ) to cancel : P");
                  
              /* validation for invalid input */
            if(scanner.hasNextInt()){ 
                    deposit = scanner.nextInt();
               }
            else {
                System.out.println(ANSI_RED+"\nInvalid input !"+ANSI_RESET); 
                scanner.next();
                    j--;
               }
        } // end of for loop j
          
               /* validation for negative nums */
            if (deposit < 0){ 
                System.out.println(ANSI_RED+"\nnumbers can't be negative"+ANSI_RESET);
                i--;
            }          
            else if(total2 > 20000){
                System.out.println(ANSI_RED+"\nLimit of P20,000 per day"+ANSI_RESET);
                i--;
            }     
                /* if you type zero */
            else if(deposit == 0){
                choice();
            }
               
  } // end of for loop i 
  
  } // end of method inputValidationDeposit
 } // end of class
